// Generated by LeetCodeContestHelper at 7/21/2024, 9:51:45 PM
// 3228. Maximum Number of Operations to Move Ones to the End
// https://leetcode.com/contest/weekly-contest-407/problems/maximum-number-of-operations-to-move-ones-to-the-end/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    int maxOperations(string s) {
        string s1;
        s1.push_back(s.front());
        for (int i = 1; i < (int)s.size(); i++) {
            if (s[i] == '1') {
                s1.push_back(s[i]);
            } else {
                if (s[i] != s1.back()) {
                    s1.push_back(s[i]);
                }
            }
        }
        int ans = 0, cur = 0;
        for (auto& e : s1) {
            if (e == '1')
                cur++;
            else
                ans += cur;
        }
        return ans;
    }
};

// int Solution::maxOperations(string s)

int main() {
    cout << "*** 3228. Maximum Number of Operations to Move Ones to the End ***"
         << endl
         << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        string s = "1001101";
        int ans0 = s0.maxOperations(s);
        int exp0 = 4;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        string s = "00111";
        int ans1 = s0.maxOperations(s);
        int exp1 = 0;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    return 0;
}

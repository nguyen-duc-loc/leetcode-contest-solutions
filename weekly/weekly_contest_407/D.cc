// Generated by LeetCodeContestHelper at 7/21/2024, 9:51:49 PM
// 3229. Minimum Operations to Make Array Equal to Target
// https://leetcode.com/contest/weekly-contest-407/problems/minimum-operations-to-make-array-equal-to-target/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    long long minimumOperations(vector<int>& nums, vector<int>& target) {
        vector<int> v;
        for (int i = 0; i < (int)nums.size(); i++) {
            v.push_back(target[i] - nums[i]);
        }
        for (int i = (int)v.size() - 1; i > 0; i--) {
            v[i] -= v[i - 1];
        }
        long long a = 0, b = 0;
        for (auto& e : v) {
            if (e > 0)
                a += e;
            else
                b += e;
        }
        return max(a, abs(b));
    }
};

// long long Solution::minimumOperations(vector<int> nums, vector<int> target)

int main() {
    cout << "*** 3229. Minimum Operations to Make Array Equal to Target ***"
         << endl
         << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<int> nums = {3, 5, 1, 2};
        vector<int> target = {4, 6, 2, 4};
        long long ans0 = s0.minimumOperations(nums, target);
        long long exp0 = 2;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<int> nums = {1, 3, 2};
        vector<int> target = {2, 1, 4};
        long long ans1 = s0.minimumOperations(nums, target);
        long long exp1 = 5;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    return 0;
}

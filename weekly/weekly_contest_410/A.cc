// Generated by LeetCodeContestHelper at 8/11/2024, 9:31:07 AM
// 100393. Snake in Matrix
// https://leetcode.com/contest/weekly-contest-410/problems/snake-in-matrix/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    int finalPositionOfSnake(int n, vector<string>& commands) {
        map<string, pair<int, int>> mp;
        mp["UP"] = {-1, 0};
        mp["RIGHT"] = {0, 1};
        mp["LEFT"] = {0, -1};
        mp["DOWN"] = {1, 0};
        int y = 0, x = 0;
        for (auto& e : commands) {
            y += mp[e].first;
            x += mp[e].second;
        }
        return y * n + x;
    }
};

// int Solution::finalPositionOfSnake(int n, vector<string> commands)

int main() {
    cout << "*** 100393. Snake in Matrix ***" << endl << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        int n = 2;
        vector<string> commands = {"RIGHT", "DOWN"};
        int ans0 = s0.finalPositionOfSnake(n, commands);
        int exp0 = 3;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        int n = 3;
        vector<string> commands = {"DOWN", "RIGHT", "UP"};
        int ans1 = s0.finalPositionOfSnake(n, commands);
        int exp1 = 1;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    return 0;
}

// Generated by LeetCodeContestHelper at 6/9/2024, 9:48:43 AM
// 100319. Maximum Total Reward Using Operations I
// https://leetcode.com/contest/weekly-contest-401/problems/maximum-total-reward-using-operations-i/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    int maxTotalReward(vector<int>& rewardValues) {
        ranges::sort(rewardValues);
        int mx = *ranges::max_element(rewardValues);
        vector<bool> dp(2 * mx);
        dp[0] = 1;
        for (auto& e : rewardValues) {
            for (int i = 0; i < e; i++) {
                if (dp[i]) {
                    dp[i + e] = 1;
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < 2 * mx; i++) {
            if (dp[i]) {
                ans = i;
            }
        }
        return ans;
    }
};

// int Solution::maxTotalReward(vector<int> rewardValues)

int main() {
    cout << "*** 100319. Maximum Total Reward Using Operations I ***" << endl
         << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<int> rewardValues = {1, 1, 3, 3};
        int ans0 = s0.maxTotalReward(rewardValues);
        int exp0 = 4;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<int> rewardValues = {1, 6, 4, 3, 2};
        int ans1 = s0.maxTotalReward(rewardValues);
        int exp1 = 11;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    return 0;
}

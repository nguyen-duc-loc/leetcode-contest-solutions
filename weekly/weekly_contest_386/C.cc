// Generated by LeetCodeContestHelper at 4/30/2024, 3:14:46 AM
// 3048. Earliest Second to Mark Indices I
// https://leetcode.com/contest/weekly-contest-386/problems/earliest-second-to-mark-indices-i/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
 public:
  int earliestSecondToMarkIndices(vector<int>& nums,
                                  vector<int>& changeIndices) {
    int low = 1, high = (int)changeIndices.size(), n = (int)nums.size(),
        ans = -1;
    while (low <= high) {
      int mid = (low + high) / 2;
      unordered_set<int> st(changeIndices.begin(), changeIndices.begin() + mid);
      if ((int)st.size() < n) {
        low = mid + 1;
        continue;
      }
      vector<int> v(n + 1);
      for (int i = 0; i < mid; i++) {
        v[changeIndices[i]] = i;
      }
      int s = 0;
      for (int i = 0; i < mid; i++) {
        if (i == v[changeIndices[i]]) {
          if (s >= nums[changeIndices[i] - 1]) {
            s -= nums[changeIndices[i] - 1];
            st.erase(changeIndices[i]);
          } else {
            break;
          }
        } else {
          s++;
        }
      }
      if (st.empty()) {
        ans = mid;
        high = mid - 1;
      } else {
        low = mid + 1;
      }
    }
    return ans;
  }
};

// int Solution::earliestSecondToMarkIndices(vector<int> nums, vector<int>
// changeIndices)

int main() {
  cout << "*** 3048. Earliest Second to Mark Indices I ***" << endl << endl;

  Solution s0;

  {
    cout << "Test 1: ";

    vector<int> nums = {2, 2, 0};
    vector<int> changeIndices = {2, 2, 2, 2, 3, 2, 2, 1};
    int ans0 = s0.earliestSecondToMarkIndices(nums, changeIndices);
    int exp0 = 8;

    if (ans0 == exp0) {
      cout << "Yes" << endl;
    } else {
      cout << "No" << endl;
      cout << "  Answer: " << ans0 << endl;
      cout << "  Expect: " << exp0 << endl;
    }
  }

  {
    cout << "Test 2: ";

    vector<int> nums = {1, 3};
    vector<int> changeIndices = {1, 1, 1, 2, 1, 1, 1};
    int ans1 = s0.earliestSecondToMarkIndices(nums, changeIndices);
    int exp1 = 6;

    if (ans1 == exp1) {
      cout << "Yes" << endl;
    } else {
      cout << "No" << endl;
      cout << "  Answer: " << ans1 << endl;
      cout << "  Expect: " << exp1 << endl;
    }
  }

  {
    cout << "Test 3: ";

    vector<int> nums = {0, 1};
    vector<int> changeIndices = {2, 2, 2};
    int ans2 = s0.earliestSecondToMarkIndices(nums, changeIndices);
    int exp2 = -1;

    if (ans2 == exp2) {
      cout << "Yes" << endl;
    } else {
      cout << "No" << endl;
      cout << "  Answer: " << ans2 << endl;
      cout << "  Expect: " << exp2 << endl;
    }
  }

  return 0;
}

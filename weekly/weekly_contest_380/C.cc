// Generated by LeetCodeContestHelper at 5/22/2024, 8:45:45 PM
// 3007. Maximum Number That Sum of the Prices Is Less Than or Equal to K
// https://leetcode.com/contest/weekly-contest-380/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    long long calc(long long n, int x) {
        if (n <= 1) {
            return (n == x);
        }
        int i = 63 - __builtin_clzll(n);
        return i / x * (1LL << (i - 1)) +
               ((i + 1) % x == 0) * (n - (1LL << i) + 1) +
               calc(n - (1LL << i), x);
    }

    long long findMaximumNumber(long long k, int x) {
        long long low = 0, high = (long long)1e15, ans;
        while (low <= high) {
            auto mid = (low + high) >> 1;
            if (calc(mid, x) <= k) {
                ans = mid;
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return ans;
    }
};

// long long Solution::findMaximumNumber(long long k, int x)

int main() {
    cout << "*** 3007. Maximum Number That Sum of the Prices Is Less Than or "
            "Equal to K ***"
         << endl
         << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        long long k = 9;
        int x = 1;
        long long ans0 = s0.findMaximumNumber(k, x);
        long long exp0 = 6;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        long long k = 7;
        int x = 2;
        long long ans1 = s0.findMaximumNumber(k, x);
        long long exp1 = 9;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    return 0;
}

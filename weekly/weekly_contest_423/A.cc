// Generated by LeetCodeContestHelper at 11/10/2024, 9:30:57 AM
// 100457. Adjacent Increasing Subarrays Detection I
// https://leetcode.com/contest/weekly-contest-423/problems/adjacent-increasing-subarrays-detection-i/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    bool hasIncreasingSubarrays(vector<int>& nums, int k) {
        for (int i = 0; i <= (int)nums.size() - 2 * k; i++) {
            bool ok = 1;
            for (int j = i + 1; j <= i + k - 1; j++) {
                if (nums[j] <= nums[j - 1]) {
                    ok = 0;
                    break;
                }
            }
            for (int j = i + k + 1; j <= i + 2 * k - 1; j++) {
                if (nums[j] <= nums[j - 1]) {
                    ok = 0;
                    break;
                }
            }
            if (ok) {
                return true;
            }
        }
        return false;
    }
};

// bool Solution::hasIncreasingSubarrays(vector<int> nums, int k)

int main() {
    cout << "*** 100457. Adjacent Increasing Subarrays Detection I ***" << endl
         << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<int> nums = {2, 5, 7, 8, 9, 2, 3, 4, 3, 1};
        int k = 3;
        bool ans0 = s0.hasIncreasingSubarrays(nums, k);
        bool exp0 = true;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<int> nums = {1, 2, 3, 4, 4, 4, 4, 5, 6, 7};
        int k = 5;
        bool ans1 = s0.hasIncreasingSubarrays(nums, k);
        bool exp1 = false;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    return 0;
}

// Generated by LeetCodeContestHelper at 4/30/2024, 3:32:04 AM
// 3107. Minimum Operations to Make Median of Array Equal to K
// https://leetcode.com/contest/weekly-contest-392/problems/minimum-operations-to-make-median-of-array-equal-to-k/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    long long minOperationsToMakeMedianK(vector<int>& nums, int k) {
        sort(nums.begin(), nums.end());
        int index = (int)nums.size() / 2;
        long long ans = 0;
        for (int i = 0; i <= index; i++) {
            if (nums[i] > k) {
                ans += 1LL * (nums[i] - k);
            }
        }
        if (nums[index] < k) {
            ans += 1LL * (k - nums[index]);
        }
        for (int i = index + 1; i < (int)nums.size(); i++) {
            if (nums[i] < k) {
                ans += 1LL * (k - nums[i]);
            }
        }
        return ans;
    }
};

// long long Solution::minOperationsToMakeMedianK(vector<int> nums, int k)

int main() {
    cout
        << "*** 3107. Minimum Operations to Make Median of Array Equal to K ***"
        << endl
        << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<int> nums = {2, 5, 6, 8, 5};
        int k = 4;
        long long ans0 = s0.minOperationsToMakeMedianK(nums, k);
        long long exp0 = 2;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<int> nums = {2, 5, 6, 8, 5};
        int k = 7;
        long long ans1 = s0.minOperationsToMakeMedianK(nums, k);
        long long exp1 = 3;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    {
        cout << "Test 3: ";

        vector<int> nums = {1, 2, 3, 4, 5, 6};
        int k = 4;
        long long ans2 = s0.minOperationsToMakeMedianK(nums, k);
        long long exp2 = 0;

        if (ans2 == exp2) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans2 << endl;
            cout << "  Expect: " << exp2 << endl;
        }
    }

    return 0;
}

// Generated by LeetCodeContestHelper at 5/19/2024, 10:02:18 AM
// 100308. Special Array II
// https://leetcode.com/contest/weekly-contest-398/problems/special-array-ii/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    vector<bool> isArraySpecial(vector<int>& nums,
                                vector<vector<int>>& queries) {
        vector<bool> ans;
        vector<int> pref = {0, 1};
        for (int i = 1; i < (int)nums.size(); i++) {
            bool not_ok = (nums[i] % 2 && nums[i - 1] % 2) ||
                          (nums[i] % 2 == 0 && nums[i - 1] % 2 == 0);
            pref.push_back(pref.back() + !not_ok);
        }
        for (auto& e : queries) {
            int from = e[0], to = e[1];
            if (from == to) {
                ans.push_back(true);
                continue;
            }
            bool not_ok = (nums[from] % 2 && nums[from + 1] % 2) ||
                          (nums[from] % 2 == 0 && nums[from + 1] % 2 == 0);
            ans.push_back(pref[to + 1] - pref[from + 1] + !not_ok ==
                          to - from + 1);
        }
        return ans;
    }
};

// vector<bool> Solution::isArraySpecial(vector<int> nums, vector<vector<int>>
// queries)

int main() {
    cout << "*** 100308. Special Array II ***" << endl << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<int> nums = {3, 4, 1, 2, 6};
        vector<vector<int>> queries = {{0, 4}};
        vector<bool> ans0 = s0.isArraySpecial(nums, queries);
        vector<bool> exp0 = {false};

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: ";
            for (bool i : ans0) {
                cout << i << " ";
            }
            cout << endl << "  Expect: ";
            for (bool i : exp0) {
                cout << i << " ";
            }
            cout << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<int> nums = {4, 3, 1, 6};
        vector<vector<int>> queries = {{0, 2}, {2, 3}};
        vector<bool> ans1 = s0.isArraySpecial(nums, queries);
        vector<bool> exp1 = {false, true};

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: ";
            for (bool i : ans1) {
                cout << i << " ";
            }
            cout << endl << "  Expect: ";
            for (bool i : exp1) {
                cout << i << " ";
            }
            cout << endl;
        }
    }

    return 0;
}

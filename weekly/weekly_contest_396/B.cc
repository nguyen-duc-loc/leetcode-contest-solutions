// Generated by LeetCodeContestHelper at 5/5/2024, 9:37:13 AM
// 100275. Minimum Number of Operations to Make Word K-Periodic
// https://leetcode.com/contest/weekly-contest-396/problems/minimum-number-of-operations-to-make-word-k-periodic/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    int minimumOperationsToMakeKPeriodic(string word, int k) {
        unordered_map<string, int> mp;
        int n = (int)word.size();
        for (int i = 0; i < n; i += k) {
            mp[word.substr(i, k)]++;
        }
        int mx = 0;
        for (auto& e : mp) {
            mx = max(mx, e.second);
        }
        return n / k - mx;
    }
};

// int Solution::minimumOperationsToMakeKPeriodic(string word, int k)

int main() {
    cout << "*** 100275. Minimum Number of Operations to Make Word K-Periodic "
            "***"
         << endl
         << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        string word = "leetcodeleet";
        int k = 4;
        int ans0 = s0.minimumOperationsToMakeKPeriodic(word, k);
        int exp0 = 1;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        string word = "leetcoleet";
        int k = 2;
        int ans1 = s0.minimumOperationsToMakeKPeriodic(word, k);
        int exp1 = 3;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    return 0;
}

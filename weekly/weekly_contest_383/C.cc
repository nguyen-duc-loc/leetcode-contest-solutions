// Generated by LeetCodeContestHelper at 5/1/2024, 4:45:01 PM
// 3030. Find the Grid of Region Average
// https://leetcode.com/contest/weekly-contest-383/problems/find-the-grid-of-region-average/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
 public:
  vector<vector<int>> resultGrid(vector<vector<int>>& image, int threshold) {
    int m = (int)image.size();
    int n = (int)image[0].size();
    int dx[4] = {1, 0, -1, 0};
    int dy[4] = {0, 1, 0, -1};
    map<pair<int, int>, vector<int>> mp;
    for (int i = 0; i <= m - 3; i++) {
      for (int j = 0; j <= n - 3; j++) {
        bool ok = 1;
        int s = 0;
        for (int k = i; k < i + 3; k++) {
          for (int l = j; l < j + 3; l++) {
            s += image[k][l];
            for (int x = 0; x < 4; x++) {
              int nk = k + dy[x];
              int nl = l + dx[x];
              if (nk >= i && nk < i + 3 && nl >= j && nl < j + 3) {
                if (abs(image[nk][nl] - image[k][l]) > threshold) {
                  ok = 0;
                }
              }
            }
          }
        }
        if (ok) {
          for (int k = i; k < i + 3; k++) {
            for (int l = j; l < j + 3; l++) {
              mp[{k, l}].push_back(s / 9);
            }
          }
        }
      }
    }
    vector<vector<int>> ans(m, vector<int>(n));
    for (int i = 0; i < m; i++) {
      for (int j = 0; j < n; j++) {
        if (mp.count({i, j})) {
          auto v = mp[{i, j}];
          int s = 0;
          for (auto& e : v) {
            s += e;
          }
          ans[i][j] = s / (int)v.size();
        } else {
          ans[i][j] = image[i][j];
        }
      }
    }
    return ans;
  }
};

// vector<vector<int>> Solution::resultGrid(vector<vector<int>> image, int
// threshold)

int main() {
  cout << "*** 3030. Find the Grid of Region Average ***" << endl << endl;

  Solution s0;

  {
    cout << "Test 1: ";

    vector<vector<int>> image = {
        {5, 6, 7, 10}, {8, 9, 10, 10}, {11, 12, 13, 10}};
    int threshold = 3;
    vector<vector<int>> ans0 = s0.resultGrid(image, threshold);
    vector<vector<int>> exp0 = {{9, 9, 9, 9}, {9, 9, 9, 9}, {9, 9, 9, 9}};

    if (ans0 == exp0) {
      cout << "Yes" << endl;
    } else {
      cout << "No" << endl;
      cout << "  Answer: " << endl;
      for (vector<int>& row : ans0) {
        for (int& i : row) {
          cout << i << " ";
        }
        cout << endl;
      }
      cout << "  Expect: " << endl;
      for (vector<int>& row : exp0) {
        for (int& i : row) {
          cout << i << " ";
        }
        cout << endl;
      }
    }
  }

  {
    cout << "Test 2: ";

    vector<vector<int>> image = {
        {10, 20, 30}, {15, 25, 35}, {20, 30, 40}, {25, 35, 45}};
    int threshold = 12;
    vector<vector<int>> ans1 = s0.resultGrid(image, threshold);
    vector<vector<int>> exp1 = {
        {25, 25, 25}, {27, 27, 27}, {27, 27, 27}, {30, 30, 30}};

    if (ans1 == exp1) {
      cout << "Yes" << endl;
    } else {
      cout << "No" << endl;
      cout << "  Answer: " << endl;
      for (vector<int>& row : ans1) {
        for (int& i : row) {
          cout << i << " ";
        }
        cout << endl;
      }
      cout << "  Expect: " << endl;
      for (vector<int>& row : exp1) {
        for (int& i : row) {
          cout << i << " ";
        }
        cout << endl;
      }
    }
  }

  {
    cout << "Test 3: ";

    vector<vector<int>> image = {{5, 6, 7}, {8, 9, 10}, {11, 12, 13}};
    int threshold = 1;
    vector<vector<int>> ans2 = s0.resultGrid(image, threshold);
    vector<vector<int>> exp2 = {{5, 6, 7}, {8, 9, 10}, {11, 12, 13}};

    if (ans2 == exp2) {
      cout << "Yes" << endl;
    } else {
      cout << "No" << endl;
      cout << "  Answer: " << endl;
      for (vector<int>& row : ans2) {
        for (int& i : row) {
          cout << i << " ";
        }
        cout << endl;
      }
      cout << "  Expect: " << endl;
      for (vector<int>& row : exp2) {
        for (int& i : row) {
          cout << i << " ";
        }
        cout << endl;
      }
    }
  }

  return 0;
}

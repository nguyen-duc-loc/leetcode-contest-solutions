// Generated by LeetCodeContestHelper at 5/18/2025, 9:38:20 AM
// 100649. Minimum Swaps to Sort by Digit Sum
// https://leetcode.com/contest/weekly-contest-450/problems/minimum-swaps-to-sort-by-digit-sum/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    int minSwaps(vector<int>& nums) {
        vector<int> t;
        vector<pair<int, int>> v;
        for (auto& e : nums) {
            int sum = 0;
            string s = to_string(e);
            for (auto& x : s) {
                sum += x - '0';
            }
            v.emplace_back(sum, e);
        }
        ranges::sort(v);
        for (auto& e : v) {
            t.push_back(e.second);
        }
        unordered_map<int, int> pos;
        for (int i = 0; i < (int)nums.size(); i++) {
            pos[nums[i]] = i;
        }
        int ans = 0;
        for (int i = 0; i < (int)nums.size(); i++) {
            if (t[i] != nums[i]) {
                int idx = pos[t[i]];
                swap(nums[i], nums[idx]);
                pos[nums[i]] = i;
                pos[nums[idx]] = idx;
                ans++;
            }
        }
        return ans;
    }
};

// int Solution::minSwaps(vector<int> nums)

int main() {
    cout << "*** 100649. Minimum Swaps to Sort by Digit Sum ***" << endl
         << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<int> nums = {37, 100};
        int ans0 = s0.minSwaps(nums);
        int exp0 = 1;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<int> nums = {22, 14, 33, 7};
        int ans1 = s0.minSwaps(nums);
        int exp1 = 0;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    {
        cout << "Test 3: ";

        vector<int> nums = {18, 43, 34, 16};
        int ans2 = s0.minSwaps(nums);
        int exp2 = 2;

        if (ans2 == exp2) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans2 << endl;
            cout << "  Expect: " << exp2 << endl;
        }
    }

    return 0;
}

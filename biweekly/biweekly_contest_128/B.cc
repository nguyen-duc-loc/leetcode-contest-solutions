// Generated by LeetCodeContestHelper at 4/30/2024, 3:54:25 AM
// 3111. Minimum Rectangles to Cover Points
// https://leetcode.com/contest/biweekly-contest-128/problems/minimum-rectangles-to-cover-points/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    int minRectanglesToCoverPoints(vector<vector<int>>& points, int w) {
        vector<int> v;
        for (auto& e : points) {
            v.push_back(e[0]);
        }
        sort(v.begin(), v.end());
        auto it = v.begin();
        int ans = 0;
        while (it != v.end()) {
            ans++;
            it = upper_bound(v.begin(), v.end(), *it + w);
        }
        return ans;
    }
};

// int Solution::minRectanglesToCoverPoints(vector<vector<int>> points, int w)

int main() {
    cout << "*** 3111. Minimum Rectangles to Cover Points ***" << endl << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<vector<int>> points = {{2, 1}, {1, 0}, {1, 4},
                                      {1, 8}, {3, 5}, {4, 6}};
        int w = 1;
        int ans0 = s0.minRectanglesToCoverPoints(points, w);
        int exp0 = 2;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<vector<int>> points = {{0, 0}, {1, 1}, {2, 2}, {3, 3},
                                      {4, 4}, {5, 5}, {6, 6}};
        int w = 2;
        int ans1 = s0.minRectanglesToCoverPoints(points, w);
        int exp1 = 3;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    {
        cout << "Test 3: ";

        vector<vector<int>> points = {{2, 3}, {1, 2}};
        int w = 0;
        int ans2 = s0.minRectanglesToCoverPoints(points, w);
        int exp2 = 2;

        if (ans2 == exp2) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans2 << endl;
            cout << "  Expect: " << exp2 << endl;
        }
    }

    return 0;
}

// Generated by LeetCodeContestHelper at 5/21/2024, 11:49:39 AM
// 1508. Range Sum of Sorted Subarray Sums
// https://leetcode.com/contest/biweekly-contest-30/problems/range-sum-of-sorted-subarray-sums/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    int rangeSum(vector<int>& nums, int n, int left, int right) {
        vector<int> v;
        for (int i = 0; i < n; i++) {
            int s = 0;
            for (int j = i; j < n; j++) {
                s += nums[j];
                v.push_back(s);
            }
        }
        sort(v.begin(), v.end());
        long long ans = 0, mod = (long long)1e9 + 7;
        for (int i = left - 1; i <= right - 1; i++) {
            ans += v[i];
            ans %= mod;
        }
        return ans;
    }
};

// int Solution::rangeSum(vector<int> nums, int n, int left, int right)

int main() {
    cout << "*** 1508. Range Sum of Sorted Subarray Sums ***" << endl << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<int> nums = {1, 2, 3, 4};
        int n = 4;
        int left = 1;
        int right = 5;
        int ans0 = s0.rangeSum(nums, n, left, right);
        int exp0 = 13;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<int> nums = {1, 2, 3, 4};
        int n = 4;
        int left = 3;
        int right = 4;
        int ans1 = s0.rangeSum(nums, n, left, right);
        int exp1 = 6;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    {
        cout << "Test 3: ";

        vector<int> nums = {1, 2, 3, 4};
        int n = 4;
        int left = 1;
        int right = 10;
        int ans2 = s0.rangeSum(nums, n, left, right);
        int exp2 = 50;

        if (ans2 == exp2) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans2 << endl;
            cout << "  Expect: " << exp2 << endl;
        }
    }

    return 0;
}

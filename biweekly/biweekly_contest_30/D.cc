// Generated by LeetCodeContestHelper at 5/21/2024, 11:49:51 AM
// 1510. Stone Game IV
// https://leetcode.com/contest/biweekly-contest-30/problems/stone-game-iv/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    bool winnerSquareGame(int n) {
        vector<int> dp(n + 1);
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j * j <= i; j++) {
                dp[i] |= !dp[i - j * j];
            }
        }
        return dp[n];
    }
};

// bool Solution::winnerSquareGame(int n)

int main() {
    cout << "*** 1510. Stone Game IV ***" << endl << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        int n = 1;
        bool ans0 = s0.winnerSquareGame(n);
        bool exp0 = true;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        int n = 2;
        bool ans1 = s0.winnerSquareGame(n);
        bool exp1 = false;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    {
        cout << "Test 3: ";

        int n = 4;
        bool ans2 = s0.winnerSquareGame(n);
        bool exp2 = true;

        if (ans2 == exp2) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans2 << endl;
            cout << "  Expect: " << exp2 << endl;
        }
    }

    return 0;
}

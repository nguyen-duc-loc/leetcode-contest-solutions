// Generated by LeetCodeContestHelper at 7/8/2024, 11:23:18 AM
// 3208. Alternating Groups II
// https://leetcode.com/contest/biweekly-contest-134/problems/alternating-groups-ii/

#define _USE_MATH_DEFINES
#include <algorithm>
#include <array>
#include <bitset>
#include <climits>
#include <cmath>
#include <deque>
#include <forward_list>
#include <functional>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <regex>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

class Solution {
   public:
    int numberOfAlternatingGroups(vector<int>& colors, int k) {
        int n = (int)colors.size();
        int ans = 0;
        deque<int> dq;
        for (int i = 0; i < n + k - 1; i++) {
            int index = i % n;
            if (dq.empty()) {
                dq.push_back(colors[index]);
            } else {
                if (colors[index] == dq.back()) {
                    dq.clear();
                    dq.push_back(colors[index]);
                } else {
                    dq.push_back(colors[index]);
                }
                if ((int)dq.size() > k) {
                    dq.pop_front();
                }
                if ((int)dq.size() == k) {
                    ans++;
                }
            }
        }
        return ans;
    }
};

// int Solution::numberOfAlternatingGroups(vector<int> colors, int k)

int main() {
    cout << "*** 3208. Alternating Groups II ***" << endl << endl;

    Solution s0;

    {
        cout << "Test 1: ";

        vector<int> colors = {0, 1, 0, 1, 0};
        int k = 3;
        int ans0 = s0.numberOfAlternatingGroups(colors, k);
        int exp0 = 3;

        if (ans0 == exp0) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans0 << endl;
            cout << "  Expect: " << exp0 << endl;
        }
    }

    {
        cout << "Test 2: ";

        vector<int> colors = {0, 1, 0, 0, 1, 0, 1};
        int k = 6;
        int ans1 = s0.numberOfAlternatingGroups(colors, k);
        int exp1 = 2;

        if (ans1 == exp1) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans1 << endl;
            cout << "  Expect: " << exp1 << endl;
        }
    }

    {
        cout << "Test 3: ";

        vector<int> colors = {1, 1, 0, 1};
        int k = 4;
        int ans2 = s0.numberOfAlternatingGroups(colors, k);
        int exp2 = 0;

        if (ans2 == exp2) {
            cout << "Yes" << endl;
        } else {
            cout << "No" << endl;
            cout << "  Answer: " << ans2 << endl;
            cout << "  Expect: " << exp2 << endl;
        }
    }

    return 0;
}
